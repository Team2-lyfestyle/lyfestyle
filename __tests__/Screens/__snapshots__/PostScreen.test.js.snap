// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PostScreen /> Should render the <PostScreen /> component 1`] = `null`;

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#EFEdF4",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "borderBottomColor": "#CACACA",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingBottom": 8,
        "paddingHorizontal": 20,
        "paddingTop": 40,
        "shadowColor": "#454D65",
        "shadowOffset": Object {
          "height": 5,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 15,
        "zIndex": 10,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#000",
            "fontSize": 15,
            "fontWeight": "500",
          }
        }
      >
         POST 
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "margin": 32,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      placeholder="Share your lyfestyle!"
      rejectResponderTermination={true}
      style={
        Object {
          "flexDirection": "row",
        }
      }
      underlineColorAndroid="transparent"
      value={false}
    />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 20,
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
  </View>
  <View />
</RCTSafeAreaView>
`;
